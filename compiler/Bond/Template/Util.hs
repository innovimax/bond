-- Copyright (c) Microsoft. All rights reserved.
-- Licensed under the MIT license. See LICENSE file in the project root for full license information.

{-# LANGUAGE QuasiQuotes, OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-orphans #-}

module Bond.Template.Util
    ( toText
    , commonHeader
    , mconcatMap
    , mconcatFor
    , sepBy
    , sepEndBy
    , sepBeginBy
    , sep
    , commaSep
    , newlineSep
    , commaLineSep
    , newlineSepEnd
    , newlineBeginSep
    , doubleLineSep
    , doubleLineSepEnd
    ) where

import Data.Int (Int64)
import Data.Monoid
import Data.Word
import Prelude
import Data.Text.Lazy (Text, justifyRight)
import Data.Text.Lazy.Builder
import Text.Shakespeare.Text
import Bond.Version
import Bond.Util

instance ToText Word16 where
    toText = toText . show

instance ToText Double where
    toText = toText . show

instance ToText Integer where
    toText = toText . show

mconcatMap :: Monoid b => (a -> b) -> [a] -> b
mconcatMap f = foldr (mappend . f) mempty

mconcatFor :: Monoid b => [a] -> (a -> b) -> b
mconcatFor m f = mconcatMap f m

sep :: ToText t => Builder -> [t] -> Builder
sep s = sepBy s toText

commaSep :: ToText t => [t] -> Builder
commaSep = sepBy ", " toText

indent :: Int64 -> Text
indent n = justifyRight (4 * n) ' ' ""

commaLine :: Int64 -> Text
commaLine n = [lt|,
#{indent n}|]

newLine :: Int64 -> Text
newLine n = [lt|
#{indent n}|]

doubleLine :: Int64 -> Text
doubleLine n = [lt|

#{indent n}|]

newlineSep, commaLineSep, newlineSepEnd, newlineBeginSep, doubleLineSep
  , doubleLineSepEnd :: Int64 -> (t -> Text) -> [t] -> Text
newlineSep = sepBy . newLine
commaLineSep = sepBy . commaLine
newlineSepEnd = sepEndBy . newLine
newlineBeginSep = sepBeginBy . newLine
doubleLineSep = sepBy . doubleLine
doubleLineSepEnd = sepEndBy . doubleLine

commonHeader ::  ToText a => a -> Text 
commonHeader file = [lt|
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler #{majorVersion}.#{minorVersion}
//   File : #{file}
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------
|]

